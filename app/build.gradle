apply plugin: rootProject.ext.BuildPlugins.androidApplication
apply plugin: rootProject.ext.BuildPlugins.androidHilt
apply plugin: "pmd"

android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId rootProject.ext.appId
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner rootProject.ext.testRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    def Libraries = rootProject.ext.Libraries
    def TestLibraries = rootProject.ext.TestLibraries

    implementation(project(":common:reactive"))
    implementation(project(":common:platform"))

    annotationProcessor(Libraries.roomAnnotationProcessor)

    // Compile time dependencies
    annotationProcessor(Libraries.lifecycleCompiler)
    annotationProcessor(Libraries.hiltCompiler)
    annotationProcessor(Libraries.roomCompiler)

    // Application dependencies
    implementation(Libraries.roomRuntime)
    implementation(Libraries.roomRxAdapter)
    implementation(Libraries.swipeRefreshLayout)
    implementation(Libraries.appCompat)
    implementation(Libraries.constraintLayout)
    implementation(Libraries.viewModel)
    implementation(Libraries.liveData)
    implementation(Libraries.liveDataCommonJava8)
    implementation(Libraries.cardView)
    implementation(Libraries.recyclerView)
    implementation(Libraries.material)
    implementation(Libraries.androidAnnotations)
    implementation(Libraries.picasso)
    implementation(Libraries.hilt)
    implementation(Libraries.moshiAdapter)
    implementation(Libraries.okHttp)
    implementation(Libraries.okHttpLoggingInterceptor)
    implementation(Libraries.rxAndroid)
    implementation(Libraries.rxRetrofitAdapter)
    implementation(Libraries.rxJava)
    implementation(Libraries.lottie)

    // Unit/Android tests dependencies
    testImplementation(TestLibraries.junit4)
    testImplementation(TestLibraries.okHttpMockWebServer)
    testImplementation(TestLibraries.mockitoCore)
    testImplementation(TestLibraries.mockitoInline)
    testImplementation(TestLibraries.mockitoJUnitJupyter)
    testImplementation(TestLibraries.robolectric)
    testImplementation(TestLibraries.coreTesting)
    testImplementation(TestLibraries.testExtJunit)
    debugImplementation(TestLibraries.fragmentTesting)

    // Test Runtime
    testRuntimeOnly(TestRuntimeLibraries.jUnitJupyter)

    // Acceptance tests dependencies
    androidTestImplementation(TestLibraries.testRunner)
    androidTestImplementation(TestLibraries.espressoCore)
    androidTestImplementation(TestLibraries.testExtJunit)
    androidTestImplementation(TestLibraries.testRules)
    androidTestImplementation(TestLibraries.espressoIntents)
    androidTestImplementation(TestLibraries.hiltTesting)

    // Development dependencies
    debugImplementation(DevLibraries.leakCanary)
}